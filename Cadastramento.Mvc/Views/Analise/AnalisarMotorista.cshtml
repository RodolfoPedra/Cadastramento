@model Cadastramento.ModelData.Logic.Cadastramento.motorista

@{
    ViewBag.Title = "Analisar Motorista";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- begin:: Subheader -->
<div class="kt-subheader kt-grid__item" id="kt_subheader">
    <div class="kt-container  kt-container--fluid ">
        <div class="kt-subheader__main">
            <h3 class="kt-head__title">
                Análise do Motorista
            </h3>
            <span class="kt-subheader__separator kt-hidden"></span>
        </div>
    </div>
</div>
<!-- end:: Subheader -->

<div class="kt-container kt-container--fluid kt-grid__item kt-grid__item--fluid">
    <!--begin::Portlet-->
    <div class="kt-portlet">
        <div class="kt-portlet__head">
            <div class="kt-portlet__head-label">
                <h3 class="kt-portlet__head-title">
                    Analisar Cadastro de Motorista
                </h3>
            </div>
        </div>
        <!--begin::Form-->
        @using (Html.BeginForm("AnalisarMotorista", "Analise", FormMethod.Post, new { @class = "kt-form", @id = "form" }))
        {
            @Html.HiddenFor(model => model.motoristaid)
            @Html.HiddenFor(model => model.usuarioidinclusao)
            @Html.HiddenFor(model => model.datahorainclusao)

            <div class="kt-portlet__body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("nome", "Nome")
                            @Html.TextBoxFor(model => model.nome, new { @class = "form-control", @placeholder = "Nome" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("cpf", "CPF")
                            @Html.TextBoxFor(model => model.cpf, new { @class = "form-control", @placeholder = "CPF" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("cnh", "CNH")
                            @Html.TextBoxFor(model => model.cnh, new { @class = "form-control", @placeholder = "CNH" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("categoriacnh", "Categoria CNH")
                            @Html.TextBoxFor(model => model.categoriacnh, new { @class = "form-control", @placeholder = "Categoria CNH" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("rg", "RG")
                            @Html.TextBoxFor(model => model.rg, new { @class = "form-control", @placeholder = "RG" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("rguf", "RG UF")
                            @Html.TextBoxFor(model => model.rguf, new { @class = "form-control", @placeholder = "RG UF" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("rgorgaoexpedidor", "Órgão Expedidor")
                            @Html.TextBoxFor(model => model.rgorgaoexpedidor, new { @class = "form-control", @placeholder = "Órgão Expedidor" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("telefone", "Telefone")
                            @Html.TextBoxFor(model => model.telefone, new { @class = "form-control", @placeholder = "Telefone" })
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="form-group">
                            @Html.Label("email", "E-mail")
                            @Html.TextBoxFor(model => model.email, new { @class = "form-control", @placeholder = "E-mail" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("cep", "CEP")
                            @Html.TextBoxFor(model => model.cep, new { @class = "form-control", @placeholder = "CEP" })
                        </div>
                    </div>
                    <div class="col-md-9">
                        <div class="form-group">
                            @Html.Label("logradouro", "Logradouro")
                            @Html.TextBoxFor(model => model.logradouro, new { @class = "form-control", @placeholder = "Logradouro" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("bairro", "Bairro")
                            @Html.TextBoxFor(model => model.bairro, new { @class = "form-control", @placeholder = "Bairro" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("uf", "UF")
                            @Html.TextBoxFor(model => model.uf, new { @class = "form-control", @placeholder = "UF" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("situacao", "Situação")
                            @Html.DropDownListFor(model => model.situacaocadastroid, ViewBag.SituacaoLista as SelectList, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                @*<div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.Label("observacao", "Motivo Aprovação")
                                @Html.TextArea("observacao", "", new { @class = "form-control", @cols = 100, @rows = 10, @placeholder = "UF" })
                            </div>
                        </div>
                    </div>*@
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <button type="button" class="btn btn-success" onclick="Download();"><i class="fa fa-save"></i> Visualizar Documento</button>
                        </div>
                    </div>
                </div>

            </div>
            <div class="kt-portlet__foot">
                <div class="kt-form__actions">
                    <button type="button" class="btn btn-dark" onclick="AbrirModalAnalisar_Click();"><i class="fa fa-save"></i> Finalizar</button>
                    <button type="button" class="btn btn-secondary" onclick="window.location='@Url.Content("~/Analise/")'; return false;"><i class="fa fa-arrow-left"></i> Voltar</button>
                </div>
            </div>
        }
        <!--end::Form-->
    </div>
    <!--end::Portlet-->
</div>

@section Scripts{
    <script>
        function Download() {

            window.location.href = content + "Analise/DownloadArquivoMotorista?id=" + $("#motoristaid").val();
        }

        //function Salvar_Click() {
        //    if (!verificaValor($("#descricao").val())) {
        //        mensagemAviso("O campo Descrição é obrigatório");
        //        return;
        //    }
        //    if (!verificaValor($("#situacao").val())) {
        //        mensagemAviso("O campo Situação é obrigatório");
        //        return;
        //    }

        //    $("#form").submit();
        //}


        function Finalizar() {

            window.location.href = content + "Analise/FinalizarAnaliseMotorista?id=" + $("#motoristaid").val() + "&situacao=" + $("#situacaocadastroid").val();
        }

        function AbrirModalAnalisar_Click() {
            //Recarrega o body
            $.get(content + "Analise/ModalAnalisar",
                null,
                (data) => {
                    $("#modalMedia .modal-title").text("Realizar Análise");
                    $("#modalMedia .modal-body").html(data);
                });

            //Abre a modal
            $("#modalMedia").modal('show');
        }

    </script>
}


